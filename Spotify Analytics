# For this project, I utilized the Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL and answered the following questions:

#10 most popular tracks
Select * FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10

#Most popular tracks in order of danceability
Select * FROM BIT_DB.Spotifydata
WHERE popularity > 91
ORDER BY danceability desc

#Most popular tracks ordered by most energy
Select * FROM BIT_DB.Spotifydata
WHERE popularity > 91
ORDER BY energy desc

#Artist's average danceability of their songs
SELECT artist_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name

#Longest song
Select * FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1

#Artist's average popularity, danceability and energy
SELECT artist_name, avg(popularity), avg(danceability), avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name
